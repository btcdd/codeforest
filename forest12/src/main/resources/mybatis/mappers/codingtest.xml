<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="codingtest">
	
	<select id="selectTestList" resultType="problemvo">
		<![CDATA[
			  select p.no as no, u.email as email , p.title as title, k.name as kind, u.nickname as nickname, p.hit as hit, p.recommend as recommend, p.level_no as levelNo, date_format(p.start_time, '%Y-%m-%d %h:%i') as startTime, date_format(p.end_time, '%Y-%m-%d %h:%i') as endTime,
				case
					when start_time <= now() and end_time > now() then 1
				    when start_time > now() then 2
				    when end_time <= now() then 3
				    else 4
				end priority
			    from problem p, user u, kind k 
			   where p.user_no = u.no
				 and p.kind_no = k.no
                 and p.level_no = 6
                 and state = 'y'
                 and p.start_time is not null
                 and p.end_time is not null
                 and p.password is not null
			order by priority, case 
									when priority = 1 
									then p.start_time 
                                end asc, 
                                case 
									when priority = 2 
									then p.start_time 
                                end asc, 
                                case 
									when priority = 3 
									then p.start_time 
                                end desc, 
                                p.end_time, p.title
		]]>
	</select>
	
	<select id="findUserByEmail" parameterType="string" resultType="uservo">
		<![CDATA[
			select *
			  from user
			 where email = #{email }
		]]>
	</select>	
 	<update id="updateHit" parameterType="long">
		<![CDATA[
			update problem
			   set hit = hit + 1
			 where no = #{problemNo }
		]]>	
	</update>
	
	<select id="selectProblemOne" parameterType="long" resultType="problemvo">
		<![CDATA[
			  select
			  	no,
			   	title,
			   	hit,
			   	recommend,
			   	date_format(start_time,'%Y-%m-%d %H:%i:%s') as startTime,
			   	date_format(end_time,'%Y-%m-%d %H:%i:%s') as endTime,
			   	user_no as userNo , 
			   	kind_no as kindNo ,
			   	date_format(reg_date,'%Y-%m-%d %H:%i:%s') as regDate,
			   	password,
			   	state,
			   	privacy
			    from problem
			   where no = #{problemNo }
		]]>
	</select>		

	<insert id="insertInputValueByAuthUserNo" parameterType="map">
		<![CDATA[
			update user
				set name = #{name}, birth = #{birth}
			where no = #{authUserNo}
		]]>
	</insert>
	
	
	<select id="findSubProblemList" parameterType="long" resultType="subproblemvo">
		<![CDATA[
			select no, title, contents, exam_input as examInput, exam_output as examOutput, problem_no as problemNo, state
			  from sub_problem
			 where problem_no = #{problemNo } and state = 'y'
		]]>
	</select>	
		
		
		
	<insert id="insertSaveProblemNo" parameterType="map">
		insert
		into save
		values (null, #{userNo }, #{problemNo })
	</insert>		
		
	<select id="findSaveNo" parameterType="long" resultType="long">
		<![CDATA[
			  select no
			    from save 
			   where problem_no = #{problemNo }
			     and user_no = #{authUserNo }
		]]>
	</select>		

	<insert id="insertSavePath" parameterType="hashmap">
		insert into save_path
		values
		<foreach collection="subProblemNoArray" item="item"
			separator=",">
			(null, ${item}, ${saveNo}, concat('/userDirectory/user',
			${authUserNo }, '/prob', ${problemNo }, '/subProb', ${item }))
		</foreach>
	</insert>		
		
	<select id="findSavePathNo" parameterType="long"
		resultType="savepathvo">
		<![CDATA[
			  select no, sub_problem_no as subProblemNo, save_no as saveNo, package_path as packagePath
			    from save_path
			   where save_no = #{saveNo }
		]]>
	</select>		

	<insert id="insertSubProblemFaceCode" parameterType="map">
		insert 
		  into code(no, save_path_no, language, file_name)
		values
		<foreach collection="savePathVoList" item="item" separator=",">
			<foreach collection="langArray" item="lang" separator=",">
				(null, ${item.no}, '${lang}', concat('Test.','${lang}'))
			</foreach>
		</foreach>
	</insert>

	<select id="findSaveVo" parameterType="long" resultType="savevo">
		<![CDATA[
			select s.no as no, s.user_no as userNo, s.problem_no as problemNo, p.title as title, k.name as kind, u.nickname as nickname 
			  from save s, user u, problem p, kind k
			 where s.no = #{saveNo } and s.user_no = u.no and s.problem_no = p.no and p.kind_no = k.no
		]]>
	</select>

	<select id="findSavePathList" parameterType="long" resultType="savepathvo">
		<![CDATA[
			select no, sub_problem_no as subProblemNo, save_no as saveNo, package_path as packagePath
			  from save_path
			 where save_no = #{saveNo }
		]]>
	</select>
	
	<select id="findCodeList" parameterType="long" resultType="codevo">
		<![CDATA[
			select c.no as no, c.save_path_no as savePathNo, c.language as language, c.file_name as fileName, sp.sub_problem_no as subProblemNo
			  from code c, save_path sp
			 where c.save_path_no = #{savePathNo } and c.save_path_no = sp.no order by c.file_name;
		]]>
	</select>	

	<select id="findByProblemNo" parameterType="hashmap" resultType="savevo">
			<![CDATA[
			select *
			from save
			where user_no = #{authUserNo} and problem_no = #{problemNo}
			]]>
	</select>
		
</mapper>